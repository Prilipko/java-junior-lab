#
# default

spring.cloud.stream.kafka.binder.brokers=localhost
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.LongSerializer
spring.cloud.stream.kafka.binder.configuration.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.LongSerializer
spring.cloud.stream.kafka.binder.configuration.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.binder.configuration.auto.commit.interval.ms=1000
spring.cloud.stream.kafka.binder.configuration.spring.json.trusted.packages=*
spring.cloud.stream.kafka.binder.configuration.spring.json.add.type.headers=true
#
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.trusted.packages=*
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.add.type.headers=true
#
# visit out
spring.cloud.stream.bindings.vout.destination=v
spring.cloud.stream.bindings.vout.producer.headerMode=headers
spring.cloud.stream.bindings.vout.producer.useNativeEncoding=true

# visit in
spring.cloud.stream.bindings.vin.destination=v
spring.cloud.stream.bindings.vin.group=v-log
spring.cloud.stream.bindings.vin.consumer.headerMode=headers
spring.cloud.stream.bindings.vin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.vin.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.vin.consumer.valueSerde=org.springframework.kafka.support.serializer.JsonSerde<com.example.kfkstrm.VisitEvent>

# visit in proc
spring.cloud.stream.bindings.vinproc.destination=v
spring.cloud.stream.bindings.vinproc.group=v-proc
spring.cloud.stream.bindings.vinproc.consumer.headerMode=headers
spring.cloud.stream.bindings.vinproc.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.vinproc.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.vinproc.consumer.valueSerde=org.springframework.kafka.support.serializer.JsonSerde<com.example.kfkstrm.VisitEvent>

#
# student out
spring.cloud.stream.bindings.sout.destination=s
spring.cloud.stream.bindings.sout.producer.headerMode=headers
spring.cloud.stream.bindings.sout.producer.useNativeEncoding=true
# student in
spring.cloud.stream.bindings.sin.destination=s
spring.cloud.stream.bindings.sin.consumer.headerMode=headers
spring.cloud.stream.bindings.sin.consumer.useNativeDecoding=true
#spring.cloud.stream.kafka.streams.bindings.sin.consumer.materializedAs=com.example.kfkstrm.Student
spring.cloud.stream.kafka.streams.bindings.sin.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.sin.consumer.valueSerde=org.springframework.kafka.support.serializer.JsonSerde<com.example.kfkstrm.Student>

#
# room out
spring.cloud.stream.bindings.rout.destination=r
spring.cloud.stream.bindings.rout.producer.headerMode=headers
spring.cloud.stream.bindings.rout.producer.useNativeEncoding=true
# room in
spring.cloud.stream.bindings.rin.destination=r
spring.cloud.stream.bindings.rin.consumer.headerMode=headers
spring.cloud.stream.bindings.rin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.rin.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.rin.consumer.valueSerde=org.springframework.kafka.support.serializer.JsonSerde<com.example.kfkstrm.Room>

#
# visit ex out
spring.cloud.stream.bindings.vxout.destination=vx
spring.cloud.stream.bindings.vxout.producer.headerMode=headers
spring.cloud.stream.bindings.vxout.producer.useNativeEncoding=true
spring.cloud.stream.kafka.streams.bindings.vxout.producer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.vxout.producer.valueSerde=org.springframework.kafka.support.serializer.JsonSerde<com.example.kfkstrm.VisitEventEx>

# visit ex in
spring.cloud.stream.bindings.vxin.destination=vx
spring.cloud.stream.bindings.vxin.group=vx-log
spring.cloud.stream.bindings.vxin.consumer.headerMode=headers
spring.cloud.stream.bindings.vxin.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.vxin.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.vxin.consumer.valueSerde=org.springframework.kafka.support.serializer.JsonSerde<com.example.kfkstrm.VisitEventEx>

